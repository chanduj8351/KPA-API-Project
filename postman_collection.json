{
  "info": {
    "name": "KPA Form Data API",
    "description": "Complete API collection for testing KPA Form Data API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        }
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('phone_number');",
                  "    pm.expect(jsonData).to.have.property('full_name');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"1234567890\",\n  \"full_name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has access token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.expect(jsonData).to.have.property('token_type');",
                  "    ",
                  "    // Save token for other requests",
                  "    pm.collectionVariables.set('token', jsonData.access_token);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"1234567890\",\n  \"password\": \"test123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Form Submissions",
      "item": [
        {
          "name": "Submit Incident Report",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has form submission data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('form_type');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    ",
                  "    // Save submission ID for other requests",
                  "    pm.collectionVariables.set('submission_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"form_type\": \"incident_report\",\n  \"title\": \"Safety Incident in Building A\",\n  \"description\": \"A safety incident occurred in Building A near the main entrance. Immediate attention required.\",\n  \"category\": \"safety\",\n  \"priority\": \"high\",\n  \"form_data\": {\n    \"location\": \"Building A - Main Entrance\",\n    \"incident_time\": \"2024-01-15T10:30:00\",\n    \"witnesses\": [\"John Smith\", \"Jane Doe\"],\n    \"incident_type\": \"slip_and_fall\",\n    \"injuries\": \"Minor bruising\",\n    \"immediate_action_taken\": \"First aid provided, area cordoned off\"\n  },\n  \"attachments\": [\"incident_photo_1.jpg\", \"incident_report.pdf\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/forms/submit",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submit"]
            }
          },
          "response": []
        },
        {
          "name": "Submit Feedback Form",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has form submission data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.form_type).to.eql('feedback');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"form_type\": \"feedback\",\n  \"title\": \"Cafeteria Service Feedback\",\n  \"description\": \"Overall positive experience with some suggestions for improvement.\",\n  \"category\": \"facilities\",\n  \"priority\": \"low\",\n  \"form_data\": {\n    \"service_rating\": 4,\n    \"food_quality\": 5,\n    \"cleanliness\": 4,\n    \"staff_friendliness\": 5,\n    \"suggestions\": \"More vegetarian options and faster service during peak hours\",\n    \"would_recommend\": true\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/forms/submit",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submit"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Submissions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/forms/submissions",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submissions"]
            }
          },
          "response": []
        },
        {
          "name": "Get Submissions with Filters",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/forms/submissions?skip=0&limit=5&status=submitted&form_type=incident_report",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submissions"],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "5"
                },
                {
                  "key": "status",
                  "value": "submitted"
                },
                {
                  "key": "form_type",
                  "value": "incident_report"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Submission",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has submission data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('form_type');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/forms/submissions/{{submission_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submissions", "{{submission_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Submission",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.status).to.eql('in_progress');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"in_progress\",\n  \"description\": \"Updated description: Investigation in progress. Security team notified.\",\n  \"form_data\": {\n    \"location\": \"Building A - Main Entrance\",\n    \"incident_time\": \"2024-01-15T10:30:00\",\n    \"witnesses\": [\"John Smith\", \"Jane Doe\"],\n    \"incident_type\": \"slip_and_fall\",\n    \"injuries\": \"Minor bruising\",\n    \"immediate_action_taken\": \"First aid provided, area cordoned off\",\n    \"investigation_status\": \"ongoing\",\n    \"assigned_to\": \"Security Team\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/forms/submissions/{{submission_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submissions", "{{submission_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Handling Tests",
      "item": [
        {
          "name": "Login with Invalid Credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('detail');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone_number\": \"1234567890\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Submit Form Without Authentication",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test(\"Response has error message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('detail');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"form_type\": \"incident_report\",\n  \"title\": \"Test Form\",\n  \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/forms/submit",
              "host": ["{{base_url}}"],
              "path": ["api", "forms", "submit"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}